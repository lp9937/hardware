<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hardware.charging.mapper.ChargingPaymentRecordMapper">
  <resultMap id="BaseResultMap" type="com.hardware.charging.pojo.model.ChargingPaymentRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="charging_record_id" jdbcType="INTEGER" property="chargingRecordId" />
    <result column="charging_start_time" jdbcType="TIMESTAMP" property="chargingStartTime" />
    <result column="charging_end_time" jdbcType="TIMESTAMP" property="chargingEndTime" />
    <result column="payment_channel" jdbcType="TINYINT" property="paymentChannel" />
    <result column="payment_method" jdbcType="TINYINT" property="paymentMethod" />
    <result column="should_amount" jdbcType="DECIMAL" property="shouldAmount" />
    <result column="actual_amount" jdbcType="DECIMAL" property="actualAmount" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="is_reduction" jdbcType="BIT" property="isReduction" />
    <result column="reduction_rule_id" jdbcType="INTEGER" property="reductionRuleId" />
    <result column="is_refund" jdbcType="BIT" property="isRefund" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, charging_record_id, charging_start_time, charging_end_time, payment_channel, 
    payment_method, should_amount, actual_amount, discount_amount, is_reduction, reduction_rule_id, 
    is_refund, refund_amount, serial_number, create_date, update_date, create_user_id, 
    update_user_id, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hardware_charging_payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hardware_charging_payment_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hardware_charging_payment_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecordExample">
    delete from hardware_charging_payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecord" useGeneratedKeys="true">
    insert into hardware_charging_payment_record (charging_record_id, charging_start_time, 
      charging_end_time, payment_channel, payment_method, 
      should_amount, actual_amount, discount_amount, 
      is_reduction, reduction_rule_id, is_refund, 
      refund_amount, serial_number, create_date, 
      update_date, create_user_id, update_user_id, 
      is_delete)
    values (#{chargingRecordId,jdbcType=INTEGER}, #{chargingStartTime,jdbcType=TIMESTAMP}, 
      #{chargingEndTime,jdbcType=TIMESTAMP}, #{paymentChannel,jdbcType=TINYINT}, #{paymentMethod,jdbcType=TINYINT}, 
      #{shouldAmount,jdbcType=DECIMAL}, #{actualAmount,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, 
      #{isReduction,jdbcType=BIT}, #{reductionRuleId,jdbcType=INTEGER}, #{isRefund,jdbcType=BIT}, 
      #{refundAmount,jdbcType=DECIMAL}, #{serialNumber,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecord" useGeneratedKeys="true">
    insert into hardware_charging_payment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chargingRecordId != null">
        charging_record_id,
      </if>
      <if test="chargingStartTime != null">
        charging_start_time,
      </if>
      <if test="chargingEndTime != null">
        charging_end_time,
      </if>
      <if test="paymentChannel != null">
        payment_channel,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="shouldAmount != null">
        should_amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="isReduction != null">
        is_reduction,
      </if>
      <if test="reductionRuleId != null">
        reduction_rule_id,
      </if>
      <if test="isRefund != null">
        is_refund,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chargingRecordId != null">
        #{chargingRecordId,jdbcType=INTEGER},
      </if>
      <if test="chargingStartTime != null">
        #{chargingStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="chargingEndTime != null">
        #{chargingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentChannel != null">
        #{paymentChannel,jdbcType=TINYINT},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="shouldAmount != null">
        #{shouldAmount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="isReduction != null">
        #{isReduction,jdbcType=BIT},
      </if>
      <if test="reductionRuleId != null">
        #{reductionRuleId,jdbcType=INTEGER},
      </if>
      <if test="isRefund != null">
        #{isRefund,jdbcType=BIT},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecordExample" resultType="java.lang.Long">
    select count(*) from hardware_charging_payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hardware_charging_payment_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.chargingRecordId != null">
        charging_record_id = #{record.chargingRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.chargingStartTime != null">
        charging_start_time = #{record.chargingStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chargingEndTime != null">
        charging_end_time = #{record.chargingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentChannel != null">
        payment_channel = #{record.paymentChannel,jdbcType=TINYINT},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="record.shouldAmount != null">
        should_amount = #{record.shouldAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.isReduction != null">
        is_reduction = #{record.isReduction,jdbcType=BIT},
      </if>
      <if test="record.reductionRuleId != null">
        reduction_rule_id = #{record.reductionRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.isRefund != null">
        is_refund = #{record.isRefund,jdbcType=BIT},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.serialNumber != null">
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hardware_charging_payment_record
    set id = #{record.id,jdbcType=INTEGER},
      charging_record_id = #{record.chargingRecordId,jdbcType=INTEGER},
      charging_start_time = #{record.chargingStartTime,jdbcType=TIMESTAMP},
      charging_end_time = #{record.chargingEndTime,jdbcType=TIMESTAMP},
      payment_channel = #{record.paymentChannel,jdbcType=TINYINT},
      payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      should_amount = #{record.shouldAmount,jdbcType=DECIMAL},
      actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      is_reduction = #{record.isReduction,jdbcType=BIT},
      reduction_rule_id = #{record.reductionRuleId,jdbcType=INTEGER},
      is_refund = #{record.isRefund,jdbcType=BIT},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecord">
    update hardware_charging_payment_record
    <set>
      <if test="chargingRecordId != null">
        charging_record_id = #{chargingRecordId,jdbcType=INTEGER},
      </if>
      <if test="chargingStartTime != null">
        charging_start_time = #{chargingStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="chargingEndTime != null">
        charging_end_time = #{chargingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentChannel != null">
        payment_channel = #{paymentChannel,jdbcType=TINYINT},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="shouldAmount != null">
        should_amount = #{shouldAmount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="isReduction != null">
        is_reduction = #{isReduction,jdbcType=BIT},
      </if>
      <if test="reductionRuleId != null">
        reduction_rule_id = #{reductionRuleId,jdbcType=INTEGER},
      </if>
      <if test="isRefund != null">
        is_refund = #{isRefund,jdbcType=BIT},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hardware.charging.pojo.model.ChargingPaymentRecord">
    update hardware_charging_payment_record
    set charging_record_id = #{chargingRecordId,jdbcType=INTEGER},
      charging_start_time = #{chargingStartTime,jdbcType=TIMESTAMP},
      charging_end_time = #{chargingEndTime,jdbcType=TIMESTAMP},
      payment_channel = #{paymentChannel,jdbcType=TINYINT},
      payment_method = #{paymentMethod,jdbcType=TINYINT},
      should_amount = #{shouldAmount,jdbcType=DECIMAL},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      is_reduction = #{isReduction,jdbcType=BIT},
      reduction_rule_id = #{reductionRuleId,jdbcType=INTEGER},
      is_refund = #{isRefund,jdbcType=BIT},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>